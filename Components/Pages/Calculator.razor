@page "/calculator"

<h3 style ="color: lime;" class="fw-bold">Blazor Calculator</h3>
<hr />

<!-- TODO: Implement the calculator's GUI -->
<div>
    <span class="fw-bold">Enter First Number</span>
    <input @bind="input1" placeholder="Enter first number" style="margin-left: 43px;"/><br />
    <span class="fw-bold">Enter Second Number</span>
    <input @bind="input2" placeholder="Enter second number" style="margin-left: 20px; margin: 20px;" />
    <div>
        <span class="fw-bold">Result: @result</span>
    </div>
    <br />
    <button type="button" class="btn btn-outline-success ms-5" @onclick="Add">Add (+)</button>
    <button type="button" class="btn btn-outline-primary ms-5" @onclick="Subtract">Subtract (-)</button>
    <button type="button" class="btn btn-outline-info ms-5" @onclick="Multiply">Multiply (X)</button>
    <button type="button" class="btn btn-outline-danger ms-5" @onclick="Divide">Divide (/)</button>
    <button type="button" class="btn btn-light ms-5">Clear All</button>
</div>

@code {
    private string input1;
    private string input2;
    private double result;

    private void Add()
    {
        // TODO: Add exception handling for invalid input
        try
        {
            double Input1 = Convert.ToDouble(input1);
            double Input2 = Convert.ToDouble(input2);
            result = Input1 + Input2;

        }
        catch(FormatException ex)
        {
            App.Current.MainPage.DisplayAlert("Error", ex.Message, "Ok");
        }
    }

    private void Subtract()
    {
        // TODO: Add exception handling for invalid input
        try
        {
            double Input1 = Convert.ToDouble(input1);
            double Input2 = Convert.ToDouble(input2);
            result = Input1 - Input2;
        }
        catch (FormatException ex)
        {
            App.Current.MainPage.DisplayAlert("Error", ex.Message, "Ok");
        }

    }

    private void Multiply()
    {
        // TODO: Add exception handling for invalid input
        try
        {

            double Input1 = Convert.ToDouble(input1);
            double Input2 = Convert.ToDouble(input2);
            result = Input1 * Input2;
        }
        catch (FormatException ex)
        {
            App.Current.MainPage.DisplayAlert("Error", ex.Message, "Ok");
        }
    }

    private void Divide()
    {

        // TODO: Add exception handling for division by zero and invalid input
        try
        {
            double Input1 = Convert.ToDouble(input1);
            double Input2 = Convert.ToDouble(input2);
            double Result = Convert.ToDouble(result);
            if (Input2 != 0)
            {
                Result = Input1 / Input2;
            }
            else
            {
                // TODO: Handle divide by zero exception
                throw new DivideByZeroException();
            }
        }
        catch(DivideByZeroException ex)
        {
            App.Current.MainPage.DisplayAlert("Error",ex.Message,"Ok");
        }
    }
}
